# Generated by Django 3.0.8 on 2021-03-08 07:40

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('schoolasaservice', '0065_auto_20210307_1933'),
    ]

    operations = [
        migrations.CreateModel(
            name='academicYear',
            fields=[
                ('uid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('academic_year', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='enrolledStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_status', models.CharField(default='N', max_length=1)),
                ('Term1', models.CharField(max_length=300)),
                ('Term1flag', models.CharField(default='N', max_length=1)),
                ('Term2', models.CharField(max_length=300)),
                ('Term2flag', models.CharField(default='N', max_length=1)),
                ('Term3', models.CharField(max_length=300)),
                ('Term3flag', models.CharField(default='N', max_length=1)),
                ('academic_year', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='studentApplications',
            fields=[
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('gender', models.CharField(max_length=250)),
                ('SaaSDOB', models.DateField()),
                ('enrolling_grade', models.CharField(max_length=250)),
                ('attendedschool', models.CharField(max_length=250)),
                ('Fathersname', models.CharField(max_length=250)),
                ('Fathersoccupation', models.CharField(max_length=250)),
                ('Mothersname', models.CharField(max_length=250)),
                ('Mothersoccupation', models.CharField(max_length=250)),
                ('income', models.CharField(max_length=250)),
                ('address', models.CharField(max_length=800)),
                ('email', models.EmailField(max_length=250)),
                ('phone', models.BigIntegerField()),
                ('geekzcommute', models.CharField(max_length=250)),
                ('yescommutelocation', models.CharField(max_length=250)),
                ('childproud', models.CharField(max_length=800)),
                ('familyactivities', models.CharField(max_length=800)),
                ('childsinterests', models.CharField(max_length=800)),
                ('yourdreams', models.CharField(max_length=800)),
                ('medicalcondition', models.CharField(max_length=800)),
                ('childsuspended', models.CharField(max_length=800)),
                ('anythingelse', models.CharField(max_length=800)),
                ('hear_about', models.CharField(max_length=100)),
                ('IS_COMPLETE', models.CharField(default='N', max_length=1)),
                ('academic_year', models.CharField(max_length=250)),
                ('enrolling_term', models.CharField(max_length=250)),
                ('student_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('Profiling_scheduled', models.CharField(default='N', max_length=1)),
                ('Profiling_complete', models.CharField(default='N', max_length=1)),
                ('Profiling_approved', models.CharField(default='N', max_length=1)),
                ('Enrolled', models.CharField(default='N', max_length=1)),
                ('microschool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolasaservice.INDIVIDUAL_WEBPAGESS1')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfilings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IS_PROFILINGCOMPLETE', models.CharField(default='N', max_length=1)),
                ('IS_APPROVED', models.CharField(default='N', max_length=1)),
                ('schedule_date', models.DateField()),
                ('USER', models.CharField(max_length=250)),
                ('EVENT_ID', models.CharField(max_length=600)),
                ('ICalUID', models.CharField(max_length=600)),
                ('START_TIME', models.CharField(max_length=250)),
                ('END_TIME', models.CharField(max_length=250)),
                ('HEADING', models.CharField(max_length=300)),
                ('modeofprofiling', models.CharField(max_length=300)),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolasaservice.Individual_admin_slots')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolasaservice.studentApplications')),
            ],
        ),
        migrations.RemoveField(
            model_name='studentapplication',
            name='microschool',
        ),
        migrations.RemoveField(
            model_name='studentprofiling',
            name='slot',
        ),
        migrations.RemoveField(
            model_name='studentprofiling',
            name='uid',
        ),
        migrations.AlterField(
            model_name='inquirys',
            name='date',
            field=models.DateTimeField(blank=True, default=datetime.datetime(2021, 3, 8, 13, 9, 32, 874884)),
        ),
        migrations.DeleteModel(
            name='enrolledStudents',
        ),
        migrations.DeleteModel(
            name='studentApplication',
        ),
        migrations.DeleteModel(
            name='StudentProfiling',
        ),
        migrations.AddField(
            model_name='enrolledstudent',
            name='student_enrolled',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolasaservice.studentApplications'),
        ),
        migrations.AlterUniqueTogether(
            name='enrolledstudent',
            unique_together={('student_enrolled', 'academic_year')},
        ),
    ]
